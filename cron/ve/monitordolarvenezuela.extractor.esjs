importar axios desde 'axios'
importar cheerio desde 'cheerio'
importar { monedas } desde '@/ve/constantes.ve.esjs'

exportar porDefecto asincrono funcion () {
  const respuesta = esperar obtenerRespuesta()

  retornar extraerCotizaciones(respuesta)
}

asincrono funcion obtenerRespuesta() {
  const respuesta = esperar axios.get(
    'https://api.monitordolarvenezuela.com/dolarhoy',
    {
      headers: {
        Origin: 'https://monitordolarvenezuela.com',
      },
    },
  )

  const datos =
    respuesta.data && respuesta.data.result && respuesta.data.result.longitud > 0
      ? respuesta.data.result[0]
      : nulo

  si (!datos) {
    lanzar crear Error('No se encontraron cotizaciones')
  }

  retornar {
    oficial: datos.bcv,
    paralelo: datos.prom_epv,
    bitcoin: datos.binance,
  }
}

funcion extraerCotizaciones(json) {
  const fuentes = [
    {
      slug: 'oficial',
      nombre: 'Oficial',
      promedio: interpretarValorMonetario(json.oficial),
    },
    {
      slug: 'paralelo',
      nombre: 'Paralelo',
      promedio: interpretarValorMonetario(json.paralelo),
    },
    {
      slug: 'bitcoin',
      nombre: 'Bitcoin',
      promedio: interpretarValorMonetario(json.bitcoin),
    },
  ]

  const cotizaciones = []

  fuentes.paraCada(({ slug, nombre, promedio }) => {
    cotizaciones.agregar({
      fuente: slug,
      nombre,
      compra: nulo,
      venta: nulo,
      promedio,
      fechaActualizacion: crear Fecha().aCadenaISO(),
    })
  })

  retornar cotizaciones
}

funcion interpretarValorMonetario(valor) {
  retornar Numero(valor);
}

funcion interpretarFecha(fecha) {
  intentar {
    retornar crear Fecha(fecha).aCadenaISO();
  } capturar (error) {
    retornar fecha
  }
}
